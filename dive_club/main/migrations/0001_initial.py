# Generated by Django 3.2 on 2025-03-23 20:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
            },
        ),
        migrations.CreateModel(
            name='ContactPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('phone_numbers', models.JSONField(default=list, verbose_name='Телефонные номера')),
                ('email', models.EmailField(max_length=254, verbose_name='Электронная почта')),
                ('map_link', models.URLField(verbose_name='Ссылка на карту')),
                ('social_links', models.JSONField(default=dict, verbose_name='Социальные сети')),
            ],
            options={
                'verbose_name': 'Контактная страница',
                'verbose_name_plural': 'Контактные страницы',
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название оборудования')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('image', models.ImageField(upload_to='equipment/', validators=[main.models.validate_image_file_size, main.models.validate_file_extension], verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Оборудование',
                'verbose_name_plural': 'Оборудование',
            },
        ),
        migrations.CreateModel(
            name='EquipmentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'Категория оборудования',
                'verbose_name_plural': 'Категории оборудования',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название мероприятия')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание мероприятия')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
            },
        ),
        migrations.CreateModel(
            name='GalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='gallery/', validators=[main.models.validate_image_file_size, main.models.validate_file_extension])),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Галерея',
                'verbose_name_plural': 'Галерея',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя инструктора')),
                ('bio', models.TextField(verbose_name='Биография инструктора')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Аватар инструктора')),
                ('room_photo', models.ImageField(blank=True, null=True, upload_to='instructors/', verbose_name='Помещение')),
            ],
            options={
                'verbose_name': 'Инструктор',
                'verbose_name_plural': 'Инструкторы',
            },
        ),
        migrations.CreateModel(
            name='PrivacyPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Политика конфиденциальности',
                'verbose_name_plural': 'Политика конфиденциальности',
            },
        ),
        migrations.CreateModel(
            name='TermsOfService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Правила пользования',
                'verbose_name_plural': 'Правила пользования',
            },
        ),
        migrations.CreateModel(
            name='TrainingPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('description', models.TextField(verbose_name='Описание страницы')),
                ('advantages', models.TextField(verbose_name='Преимущества обучения')),
            ],
            options={
                'verbose_name': 'Страница обучения',
                'verbose_name_plural': 'Страница обучения',
            },
        ),
        migrations.CreateModel(
            name='TrainingVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='training_videos/', validators=[main.models.validate_video_file_size, main.models.validate_file_extension], verbose_name='Видео')),
                ('training_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='main.trainingpage', verbose_name='Страница обучения')),
            ],
            options={
                'verbose_name': 'Видео обучения',
                'verbose_name_plural': 'Видео обучения',
            },
        ),
        migrations.CreateModel(
            name='TrainingImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='training_images/', validators=[main.models.validate_image_file_size, main.models.validate_file_extension], verbose_name='Изображение')),
                ('training_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='main.trainingpage', verbose_name='Страница обучения')),
            ],
            options={
                'verbose_name': 'Изображение обучения',
                'verbose_name_plural': 'Изображения обучения',
            },
        ),
        migrations.CreateModel(
            name='TrainingCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('beginner', 'Курсы для новичков'), ('advanced', 'Продвинутые курсы'), ('professional', 'Профессиональные курсы'), ('tech', 'Технический дайвинг')], max_length=20, verbose_name='Уровень курса')),
                ('title', models.CharField(max_length=255, verbose_name='Название курса')),
                ('description', models.TextField(verbose_name='Описание курса')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Цена курса')),
                ('training_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='main.trainingpage')),
            ],
            options={
                'verbose_name': 'Курс обучения',
                'verbose_name_plural': 'Курсы обучения',
            },
        ),
        migrations.CreateModel(
            name='HomePageContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('welcome_video', models.FileField(blank=True, null=True, upload_to='videos/', validators=[main.models.validate_video_file_size, main.models.validate_file_extension], verbose_name='Видео приветствия')),
                ('background_photo', models.ImageField(blank=True, null=True, upload_to='images/', validators=[main.models.validate_image_file_size, main.models.validate_file_extension], verbose_name='Большое изображение')),
                ('big_text', models.TextField(blank=True, null=True, verbose_name='Большой текст (на первой фотографии)')),
                ('small_photo', models.ImageField(blank=True, null=True, upload_to='images/', validators=[main.models.validate_image_file_size, main.models.validate_file_extension], verbose_name='Малое изображение')),
                ('small_text', models.TextField(blank=True, null=True, verbose_name='Малый текст')),
                ('overlay_video_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='Текст на видео')),
                ('certificate_image', models.ImageField(blank=True, null=True, upload_to='certificates/', validators=[main.models.validate_image_file_size, main.models.validate_file_extension], verbose_name='Изображение сертификата')),
                ('certificate_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название сертификата')),
                ('certificate_description', models.TextField(blank=True, null=True, verbose_name='Описание сертификата')),
                ('certificate_validity', models.CharField(blank=True, max_length=100, null=True, verbose_name='Срок действия сертификата')),
                ('certificate_terms', models.TextField(blank=True, null=True, verbose_name='Условия использования сертификата')),
                ('certificate_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена сертификата')),
                ('event_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Описание мероприятий')),
                ('discount_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название скидки')),
                ('discount_description', models.TextField(blank=True, null=True, verbose_name='Описание скидки')),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена без скидки')),
                ('discounted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена со скидкой')),
                ('discount_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Процент скидки')),
                ('discount_validity', models.DateField(blank=True, null=True, verbose_name='Срок действия скидки')),
                ('instructor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.instructor', verbose_name='Инструктор')),
            ],
            options={
                'verbose_name': 'Контент главной страницы',
                'verbose_name_plural': 'Контент главной страницы',
            },
        ),
        migrations.CreateModel(
            name='EventImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='events/', validators=[main.models.validate_image_file_size, main.models.validate_file_extension])),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='main.event')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='homepage_content',
            field=models.ManyToManyField(blank=True, related_name='events', to='main.HomePageContent', verbose_name='Контент главной страницы'),
        ),
        migrations.CreateModel(
            name='EquipmentPageContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Снаряжение для дайвинга', max_length=255, verbose_name='Заголовок страницы')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание страницы')),
                ('background_photo', models.ImageField(blank=True, null=True, upload_to='equipment_page/', validators=[main.models.validate_image_file_size, main.models.validate_file_extension], verbose_name='Фоновое изображение')),
                ('equipment', models.ManyToManyField(blank=True, related_name='equipment_page', to='main.Equipment', verbose_name='Список оборудования')),
            ],
            options={
                'verbose_name': 'Контент страницы оборудования',
                'verbose_name_plural': 'Контент страницы оборудования',
            },
        ),
        migrations.AddField(
            model_name='equipment',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.equipmentcategory', verbose_name='Категория'),
        ),
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('introduction', models.TextField(verbose_name='Введение')),
                ('team_description', models.TextField(blank=True, null=True, verbose_name='Описание команды')),
                ('team_image', models.ImageField(blank=True, null=True, upload_to='about/team/', verbose_name='Изображение команды')),
                ('team_photo', models.ImageField(blank=True, null=True, upload_to='about/team/', validators=[main.models.validate_image_file_size, main.models.validate_file_extension], verbose_name='Фото команды')),
                ('mission_statement', models.TextField(verbose_name='Наша миссия')),
                ('mission_photo', models.ImageField(blank=True, null=True, upload_to='about/mission/', validators=[main.models.validate_image_file_size, main.models.validate_file_extension], verbose_name='Фото миссии')),
                ('mission_image', models.ImageField(blank=True, null=True, upload_to='about/mission_image/', validators=[main.models.validate_image_file_size, main.models.validate_file_extension], verbose_name='Изображение миссии')),
                ('services', models.TextField(verbose_name='Наши услуги')),
                ('services_image', models.ImageField(blank=True, null=True, upload_to='about/services_image/', validators=[main.models.validate_image_file_size, main.models.validate_file_extension], verbose_name='Изображение услуг')),
                ('contact_info', models.TextField(verbose_name='Связь с нами')),
                ('social_links', models.JSONField(blank=True, null=True, verbose_name='Ссылки на соцсети')),
                ('instructors', models.ManyToManyField(blank=True, to='main.Instructor', verbose_name='Инструкторы')),
            ],
            options={
                'verbose_name': 'О нас',
                'verbose_name_plural': 'О нас',
            },
        ),
    ]
